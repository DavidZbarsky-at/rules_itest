bazel_dep(name = "rules_itest")
local_path_override(
    module_name = "rules_itest",
    path = "../",
)

bazel_dep(name = "aspect_bazel_lib", version = "2.4.2")
bazel_dep(name = "bazel_skylib", version = "1.7.1")
bazel_dep(name = "gazelle", version = "0.37.0")

go_deps = use_extension("@gazelle//:extensions.bzl", "go_deps")
go_deps.from_file(go_mod = "//:go.mod")
use_repo(
    go_deps,
    "com_github_aws_aws_sdk_go_v2",
    "com_github_aws_aws_sdk_go_v2_service_dynamodb",
)

bazel_dep(name = "rules_go", version = "0.49.0")
bazel_dep(name = "rules_jvm_external", version = "6.2")

maven = use_extension("@rules_jvm_external//:extensions.bzl", "maven")
maven.install(
    artifacts = ["com.amazonaws:DynamoDBLocal:2.0.0"],
    exclusions = [
        # rules_jvm_external doesn't really handle these properly, and even if it did,
        # there is no linux-arm64 variant. So we build this one from source instead.
        "com.almworks.sqlite4java:libsqlite4java-linux-amd64",
        "com.almworks.sqlite4java:libsqlite4java-linux-i386",
        "io.github.ganadist.sqlite4java:libsqlite4java-osx-aarch64",
        # TODO(zbarsky): Not sure why we still need this one on Mac...
        #"com.almworks.sqlite4java:libsqlite4java-osx",
        "com.almworks.sqlite4java:sqlite4java-win32-x64",
        "com.almworks.sqlite4java:sqlite4java-win32-x86",
    ],
    lock_file = "//:maven_install.json",
)
use_repo(maven, "maven", "unpinned_maven")
